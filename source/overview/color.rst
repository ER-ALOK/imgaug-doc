****************
augmenters.color
****************

WithColorspace
--------------

Apply child augmenters within a specific colorspace.

This augumenter takes a source colorspace A and a target colorspace B
as well as children C. It changes images from A to B, then applies the
child augmenters C and finally changes the colorspace back from B to A.
See also ChangeColorspace() for more.

Convert to ``HSV`` colorspace, add a value between ``0`` and ``50``
(uniformly sampled per image) to the Hue channel, then convert back to the
input colorspace (``RGB``). ::

    import imgaug.augmenters as iaa
    aug = iaa.WithColorspace(
        to_colorspace="HSV",
        from_colorspace="RGB",
        children=iaa.WithChannels(
            0,
            iaa.Add((0, 50))
        )
    )

.. figure:: ../../images/overview_of_augmenters/color/withcolorspace.jpg
    :alt: WithColorspace


WithHueAndSaturation
--------------------

Apply child augmenters to hue and saturation channels.

This augumenter takes an image in a source colorspace, converts
it to HSV, extracts the H (hue) and S (saturation) channels,
applies the provided child augmenters to these channels
and finally converts back to the original colorspace.

The image array generated by this augmenter and provided to its children
is in ``int16`` (**sic!** only augmenters that can handle ``int16`` arrays
can be children!). The hue channel is mapped to the value
range ``[0, 255]``. Before converting back to the source colorspace, the
saturation channel's values are clipped to ``[0, 255]``. A modulo operation
is applied to the hue channel's values, followed by a mapping from
``[0, 255]`` to ``[0, 180]`` (and finally the colorspace conversion).

Create an augmenter that will add a random value between ``0`` and ``50``
(uniformly sampled per image) hue channel in HSV colorspace. It
automatically accounts for the hue being in angular representation, i.e.
if the angle goes beyond 360 degrees, it will start again at 0 degrees.
The colorspace is finally converted back to ``RGB`` (default setting). ::

    import imgaug.augmenters as iaa
    aug = iaa.WithHueAndSaturation(
        iaa.WithChannels(0, iaa.Add((0, 50)))
    )

.. figure:: ../../images/overview_of_augmenters/color/withhueandsaturation_add_to_hue.jpg
    :alt: Using WithHueAndSaturation to add random values to the hue channel

Create an augmenter that adds a random value sampled uniformly
from the range ``[-30, 10]`` to the hue and multiplies the saturation
by a random factor sampled uniformly from ``[0.5, 1.5]``. It also
modifies the contrast of the saturation channel. After these steps,
the ``HSV`` image is converted back to ``RGB``. ::

    import imgaug.augmenters as iaa
    aug = iaa.WithHueAndSaturation([
        iaa.WithChannels(0, iaa.Add((-30, 10))),
        iaa.WithChannels(1, [
            iaa.Multiply((0.5, 1.5)),
            iaa.LinearContrast((0.75, 1.25))
        ])
    ])

.. figure:: ../../images/overview_of_augmenters/color/withhueandsaturation_modify_both.jpg
    :alt: Using WithHueAndSaturation to modify both the hue and saturation



MultiplyHueAndSaturation
------------------------

Multipy hue and saturation by random values.

The augmenter first transforms images to HSV colorspace, then multiplies
the pixel values in the H and S channels and afterwards converts back to
RGB.

This augmenter is a wrapper around ``WithHueAndSaturation``.

Multiply hue and saturation by random values between ``0.5`` and ``1.5``
(independently per channel and the same value for all pixels within
that channel). The hue will be automatically projected to an angular
representation. ::

    import imgaug.augmenters as iaa
    aug = iaa.MultiplyHueAndSaturation((0.5, 1.5), per_channel=True)

.. figure:: ../../images/overview_of_augmenters/color/multiplyhueandsaturation.jpg
    :alt: MultiplyHueAndSaturation

Multiply only the hue by random values between ``0.5`` and ``1.5``. ::

    import imgaug.augmenters as iaa
    aug = iaa.MultiplyHueAndSaturation(mul_hue=(0.5, 1.5))

.. figure:: ../../images/overview_of_augmenters/color/multiplyhueandsaturation_mul_hue.jpg
    :alt: MultiplyHueAndSaturation, only applied to the hue

Multiply only the saturation by random values between ``0.5`` and ``1.5``. ::

    import imgaug.augmenters as iaa
    aug = iaa.MultiplyHueAndSaturation(mul_saturation=(0.5, 1.5))

.. figure:: ../../images/overview_of_augmenters/color/multiplyhueandsaturation_mul_saturation.jpg
    :alt: MultiplyHueAndSaturation, only applied to the saturation


MultiplyHue
-----------

Multiply the hue of images by random values.

The augmenter first transforms images to HSV colorspace, then multiplies
the pixel values in the H channel and afterwards converts back to
RGB.

This augmenter is a shortcut for ``MultiplyHueAndSaturation(mul_hue=...)``.

Multiply the hue channel of images using random values between ``0.5``
and ``1.5``::

    import imgaug.augmenters as iaa
    aug = iaa.MultiplyHue((0.5, 1.5))

.. figure:: ../../images/overview_of_augmenters/color/multiplyhue.jpg
    :alt: MultiplyHue


MultiplySaturation
------------------

Multiply the saturation of images by random values.

The augmenter first transforms images to HSV colorspace, then multiplies
the pixel values in the H channel and afterwards converts back to
RGB.

This augmenter is a shortcut for
``MultiplyHueAndSaturation(mul_saturation=...)``.

Multiply the saturation channel of images using random values between
``0.5`` and ``1.5``::

    import imgaug.augmenters as iaa
    aug = iaa.MultiplySaturation((0.5, 1.5))

.. figure:: ../../images/overview_of_augmenters/color/multiplysaturation.jpg
    :alt: MultiplySaturation


AddToHueAndSaturation
---------------------

Increases or decreases hue and saturation by random values.

The augmenter first transforms images to HSV colorspace, then adds random
values to the H and S channels and afterwards converts back to RGB.

This augmenter is faster than using ``WithHueAndSaturation`` in combination
with ``Add``.

Add random values between ``-50`` and ``50`` to the hue and saturation
(independently per channel and the same value for all pixels within
that channel)::

    import imgaug.augmenters as iaa
    aug = iaa.AddToHueAndSaturation((-50, 50), per_channel=True)

.. figure:: ../../images/overview_of_augmenters/color/addtohueandsaturation.jpg
    :alt: AddToHueAndSaturation


AddToHue
--------

Add random values to the hue of images.

The augmenter first transforms images to HSV colorspace, then adds random
values to the H channel and afterwards converts back to RGB.

If you want to change both the hue and the saturation, it is recommended
to use ``AddToHueAndSaturation`` as otherwise the image will be
converted twice to HSV and back to RGB.

This augmenter is a shortcut for ``AddToHueAndSaturation(value_hue=...)``.

Sample random values from the discrete uniform range ``[-50..50]``,
convert them to angular representation and add them to the hue, i.e.
to the ``H`` channel in ``HSV`` colorspace::

    import imgaug.augmenters as iaa
    aug = iaa.AddToHue((-50, 50))

.. figure:: ../../images/overview_of_augmenters/color/addtohue.jpg
    :alt: AddToHue


AddToSaturation
---------------

Add random values to the saturation of images.

The augmenter first transforms images to HSV colorspace, then adds random
values to the S channel and afterwards converts back to RGB.

If you want to change both the hue and the saturation, it is recommended
to use ``AddToHueAndSaturation`` as otherwise the image will be
converted twice to HSV and back to RGB.

This augmenter is a shortcut for
``AddToHueAndSaturation(value_saturation=...)``.

Sample random values from the discrete uniform range ``[-50..50]``,
and add them to the saturation, i.e. to the ``S`` channel in ``HSV``
colorspace::

    import imgaug.augmenters as iaa
    aug = iaa.AddToSaturation((-50, 50))

.. figure:: ../../images/overview_of_augmenters/color/addtosaturation.jpg
    :alt: AddToSaturation


ChangeColorspace
----------------

Augmenter to change the colorspace of images.

The following example shows how to change the colorspace from RGB to HSV,
then add 50-100 to the first channel, then convert back to RGB.
This increases the hue value of each image. ::

    aug = iaa.Sequential([
        iaa.ChangeColorspace(from_colorspace="RGB", to_colorspace="HSV"),
        iaa.WithChannels(0, iaa.Add((50, 100))),
        iaa.ChangeColorspace(from_colorspace="HSV", to_colorspace="RGB")
    ])

.. figure:: ../../images/overview_of_augmenters/color/changecolorspace.jpg
    :alt: Change colorspace


Grayscale
---------

Augmenter to convert images to their grayscale versions.

Change images to grayscale and overlay them with the original image by varying
strengths, effectively removing 0 to 100% of the color::

    aug = iaa.Grayscale(alpha=(0.0, 1.0))

.. figure:: ../../images/overview_of_augmenters/color/grayscale.jpg
    :alt: Grayscale

Visualization of increasing ``alpha`` from 0.0 to 1.0 in 8 steps:

.. figure:: ../../images/overview_of_augmenters/color/grayscale_vary_alpha.jpg
    :alt: Grayscale vary alpha


KMeansColorQuantization
-----------------------

TODO


UniformColorQuantization
------------------------

TODO

